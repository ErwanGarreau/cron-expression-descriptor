////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Module data
group 'it.burning'
version '1.0-SNAPSHOT'

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build dependencies
buildscript {
    // Extra properties (valid for all projects if defined here)
    ext {
        junitJupiterVersion = "5.6.0"
    }

    // Repositories for build scripts
    repositories {
        // Maven
        mavenCentral()
        jcenter()

        // Sonatype repositories
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Plugins
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'idea'

// Override output directories
idea{
    module{
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

// Compatibility
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Repositories
repositories {
    // Maven
    mavenCentral()

    // Sonatype repositories
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Compiler flags
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        // Warn about deprecations
        options.compilerArgs << "-Xlint:deprecation"

        // Warn about unchecked casts
        options.compilerArgs << "-Xlint:unchecked"
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Unit testing
dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter:$junitJupiterVersion")
}

test {
    useJUnitPlatform()
}
